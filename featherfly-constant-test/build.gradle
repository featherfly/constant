allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'maven'  
    apply plugin: "maven-publish"
    
    sourceCompatibility = 1.7  
	targetCompatibility = 1.7  
    
    ext {
	    compileDependencies =[
	        'cn.featherfly:featherfly-common:latest.integration'
	        ,'cn.featherfly:featherfly-conversion:latest.integration'
	        ,'dom4j:dom4j:1.6.1'
	        ]
	}
	
	tasks.withType(JavaCompile) {
	    options.encoding = "UTF-8"
	}
	tasks.withType(Javadoc) {
	    options.encoding = "UTF-8"
	}

	task sourcesJar(type: Jar) {
	    classifier "sources"
	    from sourceSets.main.java.srcDirs
	}
	
	task javadocJar(type: Jar, dependsOn:javadoc) { 
	     classifier = "javadoc"
	     from javadoc.destinationDir 
	}
	
	artifacts {  
	    archives jar  
	    archives javadocJar  
	    archives sourcesJar  
	}  
	 
	
	publishing {
	    publications {
	        mavenJava(MavenPublication) {
	            from components.java
	            artifact (sourcesJar) {
	                classifier "sources"
	            }
	            artifact (javadocJar) {
	                classifier "javadoc"
	            }
	        }
	    }    
	}
	
	repositories {
        mavenCentral()
        maven {
            url  ant.properties['user.home'] +  "/.m2/repository"
        }
    }

    dependencies {
		for (def depend : compileDependencies)  {
			compile (depend)
		}
	    testCompile (
	    	'org.testng:testng:latest.integration'
	    )
	}

    jar {
	    manifest.attributes 'Build-By': "zhong ji"
	    manifest.attributes 'Tool' : "gradle"
	    manifest.attributes 'Build-Jdk' : ant.properties['java.runtime.version']
	    manifest.attributes 'Bundle-License': 'http://www.apache.org/licenses/LICENSE-2.0'
	}
}

sourceSets {
    main {
        java {
            srcDirs = ["src-test"]
        }
    }
}
	
dependencies {
	compile project(':featherfly-constant-core')
	compile project(':featherfly-constant-spring')
	compile "org.slf4j:slf4j-log4j12:1.7.7"
}

jar {
    manifest.attributes 'Build-Name': archivesBaseName
}
